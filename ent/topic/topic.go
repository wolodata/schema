// Code generated by ent, DO NOT EDIT.

package topic

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the topic type in the database.
	Label = "topic"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldKeyword holds the string denoting the keyword field in the database.
	FieldKeyword = "keyword"
	// FieldFollowTitle holds the string denoting the follow_title field in the database.
	FieldFollowTitle = "follow_title"
	// FieldFollowContent holds the string denoting the follow_content field in the database.
	FieldFollowContent = "follow_content"
	// FieldUserIds holds the string denoting the user_ids field in the database.
	FieldUserIds = "user_ids"
	// Table holds the table name of the topic in the database.
	Table = "t_topic"
)

// Columns holds all SQL columns for topic fields.
var Columns = []string{
	FieldID,
	FieldKeyword,
	FieldFollowTitle,
	FieldFollowContent,
	FieldUserIds,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// KeywordValidator is a validator for the "keyword" field. It is called by the builders before save.
	KeywordValidator func(string) error
	// DefaultFollowTitle holds the default value on creation for the "follow_title" field.
	DefaultFollowTitle bool
	// DefaultFollowContent holds the default value on creation for the "follow_content" field.
	DefaultFollowContent bool
)

// OrderOption defines the ordering options for the Topic queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByKeyword orders the results by the keyword field.
func ByKeyword(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKeyword, opts...).ToFunc()
}

// ByFollowTitle orders the results by the follow_title field.
func ByFollowTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFollowTitle, opts...).ToFunc()
}

// ByFollowContent orders the results by the follow_content field.
func ByFollowContent(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFollowContent, opts...).ToFunc()
}
