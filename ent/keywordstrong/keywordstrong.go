// Code generated by ent, DO NOT EDIT.

package keywordstrong

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the keywordstrong type in the database.
	Label = "keyword_strong"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCategory holds the string denoting the category field in the database.
	FieldCategory = "category"
	// FieldMain holds the string denoting the main field in the database.
	FieldMain = "main"
	// FieldMainCount holds the string denoting the main_count field in the database.
	FieldMainCount = "main_count"
	// FieldSub holds the string denoting the sub field in the database.
	FieldSub = "sub"
	// FieldSubCount holds the string denoting the sub_count field in the database.
	FieldSubCount = "sub_count"
	// Table holds the table name of the keywordstrong in the database.
	Table = "t_keyword_strong"
)

// Columns holds all SQL columns for keywordstrong fields.
var Columns = []string{
	FieldID,
	FieldCategory,
	FieldMain,
	FieldMainCount,
	FieldSub,
	FieldSubCount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSub holds the default value on creation for the "sub" field.
	DefaultSub string
	// DefaultSubCount holds the default value on creation for the "sub_count" field.
	DefaultSubCount uint64
)

// OrderOption defines the ordering options for the KeywordStrong queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCategory orders the results by the category field.
func ByCategory(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCategory, opts...).ToFunc()
}

// ByMain orders the results by the main field.
func ByMain(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMain, opts...).ToFunc()
}

// ByMainCount orders the results by the main_count field.
func ByMainCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMainCount, opts...).ToFunc()
}

// BySub orders the results by the sub field.
func BySub(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSub, opts...).ToFunc()
}

// BySubCount orders the results by the sub_count field.
func BySubCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubCount, opts...).ToFunc()
}
