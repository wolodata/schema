// Code generated by ent, DO NOT EDIT.

package tag

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the tag type in the database.
	Label = "tag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEnglish holds the string denoting the english field in the database.
	FieldEnglish = "english"
	// FieldChinese holds the string denoting the chinese field in the database.
	FieldChinese = "chinese"
	// Table holds the table name of the tag in the database.
	Table = "t_tag"
)

// Columns holds all SQL columns for tag fields.
var Columns = []string{
	FieldID,
	FieldEnglish,
	FieldChinese,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// EnglishValidator is a validator for the "english" field. It is called by the builders before save.
	EnglishValidator func(string) error
	// ChineseValidator is a validator for the "chinese" field. It is called by the builders before save.
	ChineseValidator func(string) error
)

// OrderOption defines the ordering options for the Tag queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByEnglish orders the results by the english field.
func ByEnglish(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnglish, opts...).ToFunc()
}

// ByChinese orders the results by the chinese field.
func ByChinese(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldChinese, opts...).ToFunc()
}
