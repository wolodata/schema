// Code generated by ent, DO NOT EDIT.

package keyword

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the keyword type in the database.
	Label = "keyword"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldWords holds the string denoting the words field in the database.
	FieldWords = "words"
	// FieldColor holds the string denoting the color field in the database.
	FieldColor = "color"
	// FieldOrder holds the string denoting the order field in the database.
	FieldOrder = "order"
	// Table holds the table name of the keyword in the database.
	Table = "t_keyword"
)

// Columns holds all SQL columns for keyword fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldWords,
	FieldColor,
	FieldOrder,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultWords holds the default value on creation for the "words" field.
	DefaultWords []string
	// DefaultColor holds the default value on creation for the "color" field.
	DefaultColor string
	// DefaultOrder holds the default value on creation for the "order" field.
	DefaultOrder uint64
)

// OrderOption defines the ordering options for the Keyword queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByColor orders the results by the color field.
func ByColor(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldColor, opts...).ToFunc()
}

// ByOrder orders the results by the order field.
func ByOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrder, opts...).ToFunc()
}
