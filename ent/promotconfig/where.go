// Code generated by ent, DO NOT EDIT.

package promotconfig

import (
	"entgo.io/ent/dialect/sql"
	"github.com/wolodata/schema/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldDescription, v))
}

// APIModel applies equality check predicate on the "api_model" field. It's identical to APIModelEQ.
func APIModel(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldAPIModel, v))
}

// APIURL applies equality check predicate on the "api_url" field. It's identical to APIURLEQ.
func APIURL(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldAPIURL, v))
}

// APIKey applies equality check predicate on the "api_key" field. It's identical to APIKeyEQ.
func APIKey(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldAPIKey, v))
}

// PromptSystem applies equality check predicate on the "prompt_system" field. It's identical to PromptSystemEQ.
func PromptSystem(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldPromptSystem, v))
}

// PromptUser applies equality check predicate on the "prompt_user" field. It's identical to PromptUserEQ.
func PromptUser(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldPromptUser, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldDescription, v))
}

// APIModelEQ applies the EQ predicate on the "api_model" field.
func APIModelEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldAPIModel, v))
}

// APIModelNEQ applies the NEQ predicate on the "api_model" field.
func APIModelNEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldAPIModel, v))
}

// APIModelIn applies the In predicate on the "api_model" field.
func APIModelIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldAPIModel, vs...))
}

// APIModelNotIn applies the NotIn predicate on the "api_model" field.
func APIModelNotIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldAPIModel, vs...))
}

// APIModelGT applies the GT predicate on the "api_model" field.
func APIModelGT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldAPIModel, v))
}

// APIModelGTE applies the GTE predicate on the "api_model" field.
func APIModelGTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldAPIModel, v))
}

// APIModelLT applies the LT predicate on the "api_model" field.
func APIModelLT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldAPIModel, v))
}

// APIModelLTE applies the LTE predicate on the "api_model" field.
func APIModelLTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldAPIModel, v))
}

// APIModelContains applies the Contains predicate on the "api_model" field.
func APIModelContains(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContains(FieldAPIModel, v))
}

// APIModelHasPrefix applies the HasPrefix predicate on the "api_model" field.
func APIModelHasPrefix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasPrefix(FieldAPIModel, v))
}

// APIModelHasSuffix applies the HasSuffix predicate on the "api_model" field.
func APIModelHasSuffix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasSuffix(FieldAPIModel, v))
}

// APIModelEqualFold applies the EqualFold predicate on the "api_model" field.
func APIModelEqualFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldAPIModel, v))
}

// APIModelContainsFold applies the ContainsFold predicate on the "api_model" field.
func APIModelContainsFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldAPIModel, v))
}

// APIURLEQ applies the EQ predicate on the "api_url" field.
func APIURLEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldAPIURL, v))
}

// APIURLNEQ applies the NEQ predicate on the "api_url" field.
func APIURLNEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldAPIURL, v))
}

// APIURLIn applies the In predicate on the "api_url" field.
func APIURLIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldAPIURL, vs...))
}

// APIURLNotIn applies the NotIn predicate on the "api_url" field.
func APIURLNotIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldAPIURL, vs...))
}

// APIURLGT applies the GT predicate on the "api_url" field.
func APIURLGT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldAPIURL, v))
}

// APIURLGTE applies the GTE predicate on the "api_url" field.
func APIURLGTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldAPIURL, v))
}

// APIURLLT applies the LT predicate on the "api_url" field.
func APIURLLT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldAPIURL, v))
}

// APIURLLTE applies the LTE predicate on the "api_url" field.
func APIURLLTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldAPIURL, v))
}

// APIURLContains applies the Contains predicate on the "api_url" field.
func APIURLContains(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContains(FieldAPIURL, v))
}

// APIURLHasPrefix applies the HasPrefix predicate on the "api_url" field.
func APIURLHasPrefix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasPrefix(FieldAPIURL, v))
}

// APIURLHasSuffix applies the HasSuffix predicate on the "api_url" field.
func APIURLHasSuffix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasSuffix(FieldAPIURL, v))
}

// APIURLEqualFold applies the EqualFold predicate on the "api_url" field.
func APIURLEqualFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldAPIURL, v))
}

// APIURLContainsFold applies the ContainsFold predicate on the "api_url" field.
func APIURLContainsFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldAPIURL, v))
}

// APIKeyEQ applies the EQ predicate on the "api_key" field.
func APIKeyEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldAPIKey, v))
}

// APIKeyNEQ applies the NEQ predicate on the "api_key" field.
func APIKeyNEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldAPIKey, v))
}

// APIKeyIn applies the In predicate on the "api_key" field.
func APIKeyIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldAPIKey, vs...))
}

// APIKeyNotIn applies the NotIn predicate on the "api_key" field.
func APIKeyNotIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldAPIKey, vs...))
}

// APIKeyGT applies the GT predicate on the "api_key" field.
func APIKeyGT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldAPIKey, v))
}

// APIKeyGTE applies the GTE predicate on the "api_key" field.
func APIKeyGTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldAPIKey, v))
}

// APIKeyLT applies the LT predicate on the "api_key" field.
func APIKeyLT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldAPIKey, v))
}

// APIKeyLTE applies the LTE predicate on the "api_key" field.
func APIKeyLTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldAPIKey, v))
}

// APIKeyContains applies the Contains predicate on the "api_key" field.
func APIKeyContains(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContains(FieldAPIKey, v))
}

// APIKeyHasPrefix applies the HasPrefix predicate on the "api_key" field.
func APIKeyHasPrefix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasPrefix(FieldAPIKey, v))
}

// APIKeyHasSuffix applies the HasSuffix predicate on the "api_key" field.
func APIKeyHasSuffix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasSuffix(FieldAPIKey, v))
}

// APIKeyEqualFold applies the EqualFold predicate on the "api_key" field.
func APIKeyEqualFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldAPIKey, v))
}

// APIKeyContainsFold applies the ContainsFold predicate on the "api_key" field.
func APIKeyContainsFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldAPIKey, v))
}

// PromptSystemEQ applies the EQ predicate on the "prompt_system" field.
func PromptSystemEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldPromptSystem, v))
}

// PromptSystemNEQ applies the NEQ predicate on the "prompt_system" field.
func PromptSystemNEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldPromptSystem, v))
}

// PromptSystemIn applies the In predicate on the "prompt_system" field.
func PromptSystemIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldPromptSystem, vs...))
}

// PromptSystemNotIn applies the NotIn predicate on the "prompt_system" field.
func PromptSystemNotIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldPromptSystem, vs...))
}

// PromptSystemGT applies the GT predicate on the "prompt_system" field.
func PromptSystemGT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldPromptSystem, v))
}

// PromptSystemGTE applies the GTE predicate on the "prompt_system" field.
func PromptSystemGTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldPromptSystem, v))
}

// PromptSystemLT applies the LT predicate on the "prompt_system" field.
func PromptSystemLT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldPromptSystem, v))
}

// PromptSystemLTE applies the LTE predicate on the "prompt_system" field.
func PromptSystemLTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldPromptSystem, v))
}

// PromptSystemContains applies the Contains predicate on the "prompt_system" field.
func PromptSystemContains(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContains(FieldPromptSystem, v))
}

// PromptSystemHasPrefix applies the HasPrefix predicate on the "prompt_system" field.
func PromptSystemHasPrefix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasPrefix(FieldPromptSystem, v))
}

// PromptSystemHasSuffix applies the HasSuffix predicate on the "prompt_system" field.
func PromptSystemHasSuffix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasSuffix(FieldPromptSystem, v))
}

// PromptSystemEqualFold applies the EqualFold predicate on the "prompt_system" field.
func PromptSystemEqualFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldPromptSystem, v))
}

// PromptSystemContainsFold applies the ContainsFold predicate on the "prompt_system" field.
func PromptSystemContainsFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldPromptSystem, v))
}

// PromptUserEQ applies the EQ predicate on the "prompt_user" field.
func PromptUserEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEQ(FieldPromptUser, v))
}

// PromptUserNEQ applies the NEQ predicate on the "prompt_user" field.
func PromptUserNEQ(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNEQ(FieldPromptUser, v))
}

// PromptUserIn applies the In predicate on the "prompt_user" field.
func PromptUserIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldIn(FieldPromptUser, vs...))
}

// PromptUserNotIn applies the NotIn predicate on the "prompt_user" field.
func PromptUserNotIn(vs ...string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldNotIn(FieldPromptUser, vs...))
}

// PromptUserGT applies the GT predicate on the "prompt_user" field.
func PromptUserGT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGT(FieldPromptUser, v))
}

// PromptUserGTE applies the GTE predicate on the "prompt_user" field.
func PromptUserGTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldGTE(FieldPromptUser, v))
}

// PromptUserLT applies the LT predicate on the "prompt_user" field.
func PromptUserLT(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLT(FieldPromptUser, v))
}

// PromptUserLTE applies the LTE predicate on the "prompt_user" field.
func PromptUserLTE(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldLTE(FieldPromptUser, v))
}

// PromptUserContains applies the Contains predicate on the "prompt_user" field.
func PromptUserContains(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContains(FieldPromptUser, v))
}

// PromptUserHasPrefix applies the HasPrefix predicate on the "prompt_user" field.
func PromptUserHasPrefix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasPrefix(FieldPromptUser, v))
}

// PromptUserHasSuffix applies the HasSuffix predicate on the "prompt_user" field.
func PromptUserHasSuffix(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldHasSuffix(FieldPromptUser, v))
}

// PromptUserEqualFold applies the EqualFold predicate on the "prompt_user" field.
func PromptUserEqualFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldEqualFold(FieldPromptUser, v))
}

// PromptUserContainsFold applies the ContainsFold predicate on the "prompt_user" field.
func PromptUserContainsFold(v string) predicate.PromotConfig {
	return predicate.PromotConfig(sql.FieldContainsFold(FieldPromptUser, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PromotConfig) predicate.PromotConfig {
	return predicate.PromotConfig(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PromotConfig) predicate.PromotConfig {
	return predicate.PromotConfig(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PromotConfig) predicate.PromotConfig {
	return predicate.PromotConfig(sql.NotPredicates(p))
}
