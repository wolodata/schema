// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/wolodata/schema/ent/article"
	"github.com/wolodata/schema/ent/schema"
	"github.com/wolodata/schema/ent/tag"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescOriginShortID is the schema descriptor for origin_short_id field.
	articleDescOriginShortID := articleFields[1].Descriptor()
	// article.OriginShortIDValidator is a validator for the "origin_short_id" field. It is called by the builders before save.
	article.OriginShortIDValidator = articleDescOriginShortID.Validators[0].(func(string) error)
	// articleDescIsChinese is the schema descriptor for is_chinese field.
	articleDescIsChinese := articleFields[2].Descriptor()
	// article.DefaultIsChinese holds the default value on creation for the is_chinese field.
	article.DefaultIsChinese = articleDescIsChinese.Default.(bool)
	// articleDescURL is the schema descriptor for url field.
	articleDescURL := articleFields[4].Descriptor()
	// article.URLValidator is a validator for the "url" field. It is called by the builders before save.
	article.URLValidator = func() func(string) error {
		validators := articleDescURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(url string) error {
			for _, fn := range fns {
				if err := fn(url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// articleDescCrawledAt is the schema descriptor for crawled_at field.
	articleDescCrawledAt := articleFields[14].Descriptor()
	// article.DefaultCrawledAt holds the default value on creation for the crawled_at field.
	article.DefaultCrawledAt = articleDescCrawledAt.Default.(func() time.Time)
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescEnglish is the schema descriptor for english field.
	tagDescEnglish := tagFields[0].Descriptor()
	// tag.EnglishValidator is a validator for the "english" field. It is called by the builders before save.
	tag.EnglishValidator = tagDescEnglish.Validators[0].(func(string) error)
	// tagDescChinese is the schema descriptor for chinese field.
	tagDescChinese := tagFields[1].Descriptor()
	// tag.ChineseValidator is a validator for the "chinese" field. It is called by the builders before save.
	tag.ChineseValidator = tagDescChinese.Validators[0].(func(string) error)
}
