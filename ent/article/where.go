// Code generated by ent, DO NOT EDIT.

package article

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/wolodata/schema/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldID, id))
}

// OriginName applies equality check predicate on the "origin_name" field. It's identical to OriginNameEQ.
func OriginName(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginName, v))
}

// OriginType applies equality check predicate on the "origin_type" field. It's identical to OriginTypeEQ.
func OriginType(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginType, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldURL, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitle, v))
}

// TitleChinese applies equality check predicate on the "title_chinese" field. It's identical to TitleChineseEQ.
func TitleChinese(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitleChinese, v))
}

// Author applies equality check predicate on the "author" field. It's identical to AuthorEQ.
func Author(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldAuthor, v))
}

// PublishedAt applies equality check predicate on the "published_at" field. It's identical to PublishedAtEQ.
func PublishedAt(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPublishedAt, v))
}

// Raw applies equality check predicate on the "raw" field. It's identical to RawEQ.
func Raw(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldRaw, v))
}

// CrawledAt applies equality check predicate on the "crawled_at" field. It's identical to CrawledAtEQ.
func CrawledAt(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCrawledAt, v))
}

// SummaryChinese applies equality check predicate on the "summary_chinese" field. It's identical to SummaryChineseEQ.
func SummaryChinese(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldSummaryChinese, v))
}

// OriginNameEQ applies the EQ predicate on the "origin_name" field.
func OriginNameEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginName, v))
}

// OriginNameNEQ applies the NEQ predicate on the "origin_name" field.
func OriginNameNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldOriginName, v))
}

// OriginNameIn applies the In predicate on the "origin_name" field.
func OriginNameIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldOriginName, vs...))
}

// OriginNameNotIn applies the NotIn predicate on the "origin_name" field.
func OriginNameNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldOriginName, vs...))
}

// OriginNameGT applies the GT predicate on the "origin_name" field.
func OriginNameGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldOriginName, v))
}

// OriginNameGTE applies the GTE predicate on the "origin_name" field.
func OriginNameGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldOriginName, v))
}

// OriginNameLT applies the LT predicate on the "origin_name" field.
func OriginNameLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldOriginName, v))
}

// OriginNameLTE applies the LTE predicate on the "origin_name" field.
func OriginNameLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldOriginName, v))
}

// OriginNameContains applies the Contains predicate on the "origin_name" field.
func OriginNameContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldOriginName, v))
}

// OriginNameHasPrefix applies the HasPrefix predicate on the "origin_name" field.
func OriginNameHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldOriginName, v))
}

// OriginNameHasSuffix applies the HasSuffix predicate on the "origin_name" field.
func OriginNameHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldOriginName, v))
}

// OriginNameEqualFold applies the EqualFold predicate on the "origin_name" field.
func OriginNameEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldOriginName, v))
}

// OriginNameContainsFold applies the ContainsFold predicate on the "origin_name" field.
func OriginNameContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldOriginName, v))
}

// OriginTypeEQ applies the EQ predicate on the "origin_type" field.
func OriginTypeEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginType, v))
}

// OriginTypeNEQ applies the NEQ predicate on the "origin_type" field.
func OriginTypeNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldOriginType, v))
}

// OriginTypeIn applies the In predicate on the "origin_type" field.
func OriginTypeIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldOriginType, vs...))
}

// OriginTypeNotIn applies the NotIn predicate on the "origin_type" field.
func OriginTypeNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldOriginType, vs...))
}

// OriginTypeGT applies the GT predicate on the "origin_type" field.
func OriginTypeGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldOriginType, v))
}

// OriginTypeGTE applies the GTE predicate on the "origin_type" field.
func OriginTypeGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldOriginType, v))
}

// OriginTypeLT applies the LT predicate on the "origin_type" field.
func OriginTypeLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldOriginType, v))
}

// OriginTypeLTE applies the LTE predicate on the "origin_type" field.
func OriginTypeLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldOriginType, v))
}

// OriginTypeContains applies the Contains predicate on the "origin_type" field.
func OriginTypeContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldOriginType, v))
}

// OriginTypeHasPrefix applies the HasPrefix predicate on the "origin_type" field.
func OriginTypeHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldOriginType, v))
}

// OriginTypeHasSuffix applies the HasSuffix predicate on the "origin_type" field.
func OriginTypeHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldOriginType, v))
}

// OriginTypeEqualFold applies the EqualFold predicate on the "origin_type" field.
func OriginTypeEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldOriginType, v))
}

// OriginTypeContainsFold applies the ContainsFold predicate on the "origin_type" field.
func OriginTypeContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldOriginType, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldURL, v))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldURL, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldTitle, v))
}

// TitleChineseEQ applies the EQ predicate on the "title_chinese" field.
func TitleChineseEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitleChinese, v))
}

// TitleChineseNEQ applies the NEQ predicate on the "title_chinese" field.
func TitleChineseNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldTitleChinese, v))
}

// TitleChineseIn applies the In predicate on the "title_chinese" field.
func TitleChineseIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldTitleChinese, vs...))
}

// TitleChineseNotIn applies the NotIn predicate on the "title_chinese" field.
func TitleChineseNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldTitleChinese, vs...))
}

// TitleChineseGT applies the GT predicate on the "title_chinese" field.
func TitleChineseGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldTitleChinese, v))
}

// TitleChineseGTE applies the GTE predicate on the "title_chinese" field.
func TitleChineseGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldTitleChinese, v))
}

// TitleChineseLT applies the LT predicate on the "title_chinese" field.
func TitleChineseLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldTitleChinese, v))
}

// TitleChineseLTE applies the LTE predicate on the "title_chinese" field.
func TitleChineseLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldTitleChinese, v))
}

// TitleChineseContains applies the Contains predicate on the "title_chinese" field.
func TitleChineseContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldTitleChinese, v))
}

// TitleChineseHasPrefix applies the HasPrefix predicate on the "title_chinese" field.
func TitleChineseHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldTitleChinese, v))
}

// TitleChineseHasSuffix applies the HasSuffix predicate on the "title_chinese" field.
func TitleChineseHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldTitleChinese, v))
}

// TitleChineseIsNil applies the IsNil predicate on the "title_chinese" field.
func TitleChineseIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldTitleChinese))
}

// TitleChineseNotNil applies the NotNil predicate on the "title_chinese" field.
func TitleChineseNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldTitleChinese))
}

// TitleChineseEqualFold applies the EqualFold predicate on the "title_chinese" field.
func TitleChineseEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldTitleChinese, v))
}

// TitleChineseContainsFold applies the ContainsFold predicate on the "title_chinese" field.
func TitleChineseContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldTitleChinese, v))
}

// AuthorEQ applies the EQ predicate on the "author" field.
func AuthorEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldAuthor, v))
}

// AuthorNEQ applies the NEQ predicate on the "author" field.
func AuthorNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldAuthor, v))
}

// AuthorIn applies the In predicate on the "author" field.
func AuthorIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldAuthor, vs...))
}

// AuthorNotIn applies the NotIn predicate on the "author" field.
func AuthorNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldAuthor, vs...))
}

// AuthorGT applies the GT predicate on the "author" field.
func AuthorGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldAuthor, v))
}

// AuthorGTE applies the GTE predicate on the "author" field.
func AuthorGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldAuthor, v))
}

// AuthorLT applies the LT predicate on the "author" field.
func AuthorLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldAuthor, v))
}

// AuthorLTE applies the LTE predicate on the "author" field.
func AuthorLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldAuthor, v))
}

// AuthorContains applies the Contains predicate on the "author" field.
func AuthorContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldAuthor, v))
}

// AuthorHasPrefix applies the HasPrefix predicate on the "author" field.
func AuthorHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldAuthor, v))
}

// AuthorHasSuffix applies the HasSuffix predicate on the "author" field.
func AuthorHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldAuthor, v))
}

// AuthorIsNil applies the IsNil predicate on the "author" field.
func AuthorIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldAuthor))
}

// AuthorNotNil applies the NotNil predicate on the "author" field.
func AuthorNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldAuthor))
}

// AuthorEqualFold applies the EqualFold predicate on the "author" field.
func AuthorEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldAuthor, v))
}

// AuthorContainsFold applies the ContainsFold predicate on the "author" field.
func AuthorContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldAuthor, v))
}

// PublishedAtEQ applies the EQ predicate on the "published_at" field.
func PublishedAtEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPublishedAt, v))
}

// PublishedAtNEQ applies the NEQ predicate on the "published_at" field.
func PublishedAtNEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldPublishedAt, v))
}

// PublishedAtIn applies the In predicate on the "published_at" field.
func PublishedAtIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldPublishedAt, vs...))
}

// PublishedAtNotIn applies the NotIn predicate on the "published_at" field.
func PublishedAtNotIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldPublishedAt, vs...))
}

// PublishedAtGT applies the GT predicate on the "published_at" field.
func PublishedAtGT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldPublishedAt, v))
}

// PublishedAtGTE applies the GTE predicate on the "published_at" field.
func PublishedAtGTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldPublishedAt, v))
}

// PublishedAtLT applies the LT predicate on the "published_at" field.
func PublishedAtLT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldPublishedAt, v))
}

// PublishedAtLTE applies the LTE predicate on the "published_at" field.
func PublishedAtLTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldPublishedAt, v))
}

// RawEQ applies the EQ predicate on the "raw" field.
func RawEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldRaw, v))
}

// RawNEQ applies the NEQ predicate on the "raw" field.
func RawNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldRaw, v))
}

// RawIn applies the In predicate on the "raw" field.
func RawIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldRaw, vs...))
}

// RawNotIn applies the NotIn predicate on the "raw" field.
func RawNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldRaw, vs...))
}

// RawGT applies the GT predicate on the "raw" field.
func RawGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldRaw, v))
}

// RawGTE applies the GTE predicate on the "raw" field.
func RawGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldRaw, v))
}

// RawLT applies the LT predicate on the "raw" field.
func RawLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldRaw, v))
}

// RawLTE applies the LTE predicate on the "raw" field.
func RawLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldRaw, v))
}

// RawContains applies the Contains predicate on the "raw" field.
func RawContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldRaw, v))
}

// RawHasPrefix applies the HasPrefix predicate on the "raw" field.
func RawHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldRaw, v))
}

// RawHasSuffix applies the HasSuffix predicate on the "raw" field.
func RawHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldRaw, v))
}

// RawEqualFold applies the EqualFold predicate on the "raw" field.
func RawEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldRaw, v))
}

// RawContainsFold applies the ContainsFold predicate on the "raw" field.
func RawContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldRaw, v))
}

// CrawledAtEQ applies the EQ predicate on the "crawled_at" field.
func CrawledAtEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCrawledAt, v))
}

// CrawledAtNEQ applies the NEQ predicate on the "crawled_at" field.
func CrawledAtNEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCrawledAt, v))
}

// CrawledAtIn applies the In predicate on the "crawled_at" field.
func CrawledAtIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldCrawledAt, vs...))
}

// CrawledAtNotIn applies the NotIn predicate on the "crawled_at" field.
func CrawledAtNotIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldCrawledAt, vs...))
}

// CrawledAtGT applies the GT predicate on the "crawled_at" field.
func CrawledAtGT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldCrawledAt, v))
}

// CrawledAtGTE applies the GTE predicate on the "crawled_at" field.
func CrawledAtGTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldCrawledAt, v))
}

// CrawledAtLT applies the LT predicate on the "crawled_at" field.
func CrawledAtLT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldCrawledAt, v))
}

// CrawledAtLTE applies the LTE predicate on the "crawled_at" field.
func CrawledAtLTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldCrawledAt, v))
}

// SummaryChineseEQ applies the EQ predicate on the "summary_chinese" field.
func SummaryChineseEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldSummaryChinese, v))
}

// SummaryChineseNEQ applies the NEQ predicate on the "summary_chinese" field.
func SummaryChineseNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldSummaryChinese, v))
}

// SummaryChineseIn applies the In predicate on the "summary_chinese" field.
func SummaryChineseIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldSummaryChinese, vs...))
}

// SummaryChineseNotIn applies the NotIn predicate on the "summary_chinese" field.
func SummaryChineseNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldSummaryChinese, vs...))
}

// SummaryChineseGT applies the GT predicate on the "summary_chinese" field.
func SummaryChineseGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldSummaryChinese, v))
}

// SummaryChineseGTE applies the GTE predicate on the "summary_chinese" field.
func SummaryChineseGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldSummaryChinese, v))
}

// SummaryChineseLT applies the LT predicate on the "summary_chinese" field.
func SummaryChineseLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldSummaryChinese, v))
}

// SummaryChineseLTE applies the LTE predicate on the "summary_chinese" field.
func SummaryChineseLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldSummaryChinese, v))
}

// SummaryChineseContains applies the Contains predicate on the "summary_chinese" field.
func SummaryChineseContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldSummaryChinese, v))
}

// SummaryChineseHasPrefix applies the HasPrefix predicate on the "summary_chinese" field.
func SummaryChineseHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldSummaryChinese, v))
}

// SummaryChineseHasSuffix applies the HasSuffix predicate on the "summary_chinese" field.
func SummaryChineseHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldSummaryChinese, v))
}

// SummaryChineseIsNil applies the IsNil predicate on the "summary_chinese" field.
func SummaryChineseIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldSummaryChinese))
}

// SummaryChineseNotNil applies the NotNil predicate on the "summary_chinese" field.
func SummaryChineseNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldSummaryChinese))
}

// SummaryChineseEqualFold applies the EqualFold predicate on the "summary_chinese" field.
func SummaryChineseEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldSummaryChinese, v))
}

// SummaryChineseContainsFold applies the ContainsFold predicate on the "summary_chinese" field.
func SummaryChineseContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldSummaryChinese, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Article) predicate.Article {
	return predicate.Article(sql.NotPredicates(p))
}
