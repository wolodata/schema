// Code generated by ent, DO NOT EDIT.

package article

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/wolodata/schema/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldID, id))
}

// OriginName applies equality check predicate on the "origin_name" field. It's identical to OriginNameEQ.
func OriginName(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginName, v))
}

// OriginType applies equality check predicate on the "origin_type" field. It's identical to OriginTypeEQ.
func OriginType(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginType, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldURL, v))
}

// TitleEn applies equality check predicate on the "title_en" field. It's identical to TitleEnEQ.
func TitleEn(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitleEn, v))
}

// TitleCn applies equality check predicate on the "title_cn" field. It's identical to TitleCnEQ.
func TitleCn(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitleCn, v))
}

// Author applies equality check predicate on the "author" field. It's identical to AuthorEQ.
func Author(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldAuthor, v))
}

// PublishedAt applies equality check predicate on the "published_at" field. It's identical to PublishedAtEQ.
func PublishedAt(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPublishedAt, v))
}

// RawEn applies equality check predicate on the "raw_en" field. It's identical to RawEnEQ.
func RawEn(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldRawEn, v))
}

// RawCn applies equality check predicate on the "raw_cn" field. It's identical to RawCnEQ.
func RawCn(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldRawCn, v))
}

// PreviewEn applies equality check predicate on the "preview_en" field. It's identical to PreviewEnEQ.
func PreviewEn(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPreviewEn, v))
}

// PreviewCn applies equality check predicate on the "preview_cn" field. It's identical to PreviewCnEQ.
func PreviewCn(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPreviewCn, v))
}

// CrawledAt applies equality check predicate on the "crawled_at" field. It's identical to CrawledAtEQ.
func CrawledAt(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCrawledAt, v))
}

// SummaryCn applies equality check predicate on the "summary_cn" field. It's identical to SummaryCnEQ.
func SummaryCn(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldSummaryCn, v))
}

// OriginNameEQ applies the EQ predicate on the "origin_name" field.
func OriginNameEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginName, v))
}

// OriginNameNEQ applies the NEQ predicate on the "origin_name" field.
func OriginNameNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldOriginName, v))
}

// OriginNameIn applies the In predicate on the "origin_name" field.
func OriginNameIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldOriginName, vs...))
}

// OriginNameNotIn applies the NotIn predicate on the "origin_name" field.
func OriginNameNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldOriginName, vs...))
}

// OriginNameGT applies the GT predicate on the "origin_name" field.
func OriginNameGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldOriginName, v))
}

// OriginNameGTE applies the GTE predicate on the "origin_name" field.
func OriginNameGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldOriginName, v))
}

// OriginNameLT applies the LT predicate on the "origin_name" field.
func OriginNameLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldOriginName, v))
}

// OriginNameLTE applies the LTE predicate on the "origin_name" field.
func OriginNameLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldOriginName, v))
}

// OriginNameContains applies the Contains predicate on the "origin_name" field.
func OriginNameContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldOriginName, v))
}

// OriginNameHasPrefix applies the HasPrefix predicate on the "origin_name" field.
func OriginNameHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldOriginName, v))
}

// OriginNameHasSuffix applies the HasSuffix predicate on the "origin_name" field.
func OriginNameHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldOriginName, v))
}

// OriginNameEqualFold applies the EqualFold predicate on the "origin_name" field.
func OriginNameEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldOriginName, v))
}

// OriginNameContainsFold applies the ContainsFold predicate on the "origin_name" field.
func OriginNameContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldOriginName, v))
}

// OriginTypeEQ applies the EQ predicate on the "origin_type" field.
func OriginTypeEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldOriginType, v))
}

// OriginTypeNEQ applies the NEQ predicate on the "origin_type" field.
func OriginTypeNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldOriginType, v))
}

// OriginTypeIn applies the In predicate on the "origin_type" field.
func OriginTypeIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldOriginType, vs...))
}

// OriginTypeNotIn applies the NotIn predicate on the "origin_type" field.
func OriginTypeNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldOriginType, vs...))
}

// OriginTypeGT applies the GT predicate on the "origin_type" field.
func OriginTypeGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldOriginType, v))
}

// OriginTypeGTE applies the GTE predicate on the "origin_type" field.
func OriginTypeGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldOriginType, v))
}

// OriginTypeLT applies the LT predicate on the "origin_type" field.
func OriginTypeLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldOriginType, v))
}

// OriginTypeLTE applies the LTE predicate on the "origin_type" field.
func OriginTypeLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldOriginType, v))
}

// OriginTypeContains applies the Contains predicate on the "origin_type" field.
func OriginTypeContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldOriginType, v))
}

// OriginTypeHasPrefix applies the HasPrefix predicate on the "origin_type" field.
func OriginTypeHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldOriginType, v))
}

// OriginTypeHasSuffix applies the HasSuffix predicate on the "origin_type" field.
func OriginTypeHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldOriginType, v))
}

// OriginTypeEqualFold applies the EqualFold predicate on the "origin_type" field.
func OriginTypeEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldOriginType, v))
}

// OriginTypeContainsFold applies the ContainsFold predicate on the "origin_type" field.
func OriginTypeContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldOriginType, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldURL, v))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldURL, v))
}

// TitleEnEQ applies the EQ predicate on the "title_en" field.
func TitleEnEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitleEn, v))
}

// TitleEnNEQ applies the NEQ predicate on the "title_en" field.
func TitleEnNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldTitleEn, v))
}

// TitleEnIn applies the In predicate on the "title_en" field.
func TitleEnIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldTitleEn, vs...))
}

// TitleEnNotIn applies the NotIn predicate on the "title_en" field.
func TitleEnNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldTitleEn, vs...))
}

// TitleEnGT applies the GT predicate on the "title_en" field.
func TitleEnGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldTitleEn, v))
}

// TitleEnGTE applies the GTE predicate on the "title_en" field.
func TitleEnGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldTitleEn, v))
}

// TitleEnLT applies the LT predicate on the "title_en" field.
func TitleEnLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldTitleEn, v))
}

// TitleEnLTE applies the LTE predicate on the "title_en" field.
func TitleEnLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldTitleEn, v))
}

// TitleEnContains applies the Contains predicate on the "title_en" field.
func TitleEnContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldTitleEn, v))
}

// TitleEnHasPrefix applies the HasPrefix predicate on the "title_en" field.
func TitleEnHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldTitleEn, v))
}

// TitleEnHasSuffix applies the HasSuffix predicate on the "title_en" field.
func TitleEnHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldTitleEn, v))
}

// TitleEnIsNil applies the IsNil predicate on the "title_en" field.
func TitleEnIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldTitleEn))
}

// TitleEnNotNil applies the NotNil predicate on the "title_en" field.
func TitleEnNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldTitleEn))
}

// TitleEnEqualFold applies the EqualFold predicate on the "title_en" field.
func TitleEnEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldTitleEn, v))
}

// TitleEnContainsFold applies the ContainsFold predicate on the "title_en" field.
func TitleEnContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldTitleEn, v))
}

// TitleCnEQ applies the EQ predicate on the "title_cn" field.
func TitleCnEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitleCn, v))
}

// TitleCnNEQ applies the NEQ predicate on the "title_cn" field.
func TitleCnNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldTitleCn, v))
}

// TitleCnIn applies the In predicate on the "title_cn" field.
func TitleCnIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldTitleCn, vs...))
}

// TitleCnNotIn applies the NotIn predicate on the "title_cn" field.
func TitleCnNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldTitleCn, vs...))
}

// TitleCnGT applies the GT predicate on the "title_cn" field.
func TitleCnGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldTitleCn, v))
}

// TitleCnGTE applies the GTE predicate on the "title_cn" field.
func TitleCnGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldTitleCn, v))
}

// TitleCnLT applies the LT predicate on the "title_cn" field.
func TitleCnLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldTitleCn, v))
}

// TitleCnLTE applies the LTE predicate on the "title_cn" field.
func TitleCnLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldTitleCn, v))
}

// TitleCnContains applies the Contains predicate on the "title_cn" field.
func TitleCnContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldTitleCn, v))
}

// TitleCnHasPrefix applies the HasPrefix predicate on the "title_cn" field.
func TitleCnHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldTitleCn, v))
}

// TitleCnHasSuffix applies the HasSuffix predicate on the "title_cn" field.
func TitleCnHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldTitleCn, v))
}

// TitleCnIsNil applies the IsNil predicate on the "title_cn" field.
func TitleCnIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldTitleCn))
}

// TitleCnNotNil applies the NotNil predicate on the "title_cn" field.
func TitleCnNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldTitleCn))
}

// TitleCnEqualFold applies the EqualFold predicate on the "title_cn" field.
func TitleCnEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldTitleCn, v))
}

// TitleCnContainsFold applies the ContainsFold predicate on the "title_cn" field.
func TitleCnContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldTitleCn, v))
}

// AuthorEQ applies the EQ predicate on the "author" field.
func AuthorEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldAuthor, v))
}

// AuthorNEQ applies the NEQ predicate on the "author" field.
func AuthorNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldAuthor, v))
}

// AuthorIn applies the In predicate on the "author" field.
func AuthorIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldAuthor, vs...))
}

// AuthorNotIn applies the NotIn predicate on the "author" field.
func AuthorNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldAuthor, vs...))
}

// AuthorGT applies the GT predicate on the "author" field.
func AuthorGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldAuthor, v))
}

// AuthorGTE applies the GTE predicate on the "author" field.
func AuthorGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldAuthor, v))
}

// AuthorLT applies the LT predicate on the "author" field.
func AuthorLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldAuthor, v))
}

// AuthorLTE applies the LTE predicate on the "author" field.
func AuthorLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldAuthor, v))
}

// AuthorContains applies the Contains predicate on the "author" field.
func AuthorContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldAuthor, v))
}

// AuthorHasPrefix applies the HasPrefix predicate on the "author" field.
func AuthorHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldAuthor, v))
}

// AuthorHasSuffix applies the HasSuffix predicate on the "author" field.
func AuthorHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldAuthor, v))
}

// AuthorIsNil applies the IsNil predicate on the "author" field.
func AuthorIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldAuthor))
}

// AuthorNotNil applies the NotNil predicate on the "author" field.
func AuthorNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldAuthor))
}

// AuthorEqualFold applies the EqualFold predicate on the "author" field.
func AuthorEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldAuthor, v))
}

// AuthorContainsFold applies the ContainsFold predicate on the "author" field.
func AuthorContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldAuthor, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldTags))
}

// PublishedAtEQ applies the EQ predicate on the "published_at" field.
func PublishedAtEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPublishedAt, v))
}

// PublishedAtNEQ applies the NEQ predicate on the "published_at" field.
func PublishedAtNEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldPublishedAt, v))
}

// PublishedAtIn applies the In predicate on the "published_at" field.
func PublishedAtIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldPublishedAt, vs...))
}

// PublishedAtNotIn applies the NotIn predicate on the "published_at" field.
func PublishedAtNotIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldPublishedAt, vs...))
}

// PublishedAtGT applies the GT predicate on the "published_at" field.
func PublishedAtGT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldPublishedAt, v))
}

// PublishedAtGTE applies the GTE predicate on the "published_at" field.
func PublishedAtGTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldPublishedAt, v))
}

// PublishedAtLT applies the LT predicate on the "published_at" field.
func PublishedAtLT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldPublishedAt, v))
}

// PublishedAtLTE applies the LTE predicate on the "published_at" field.
func PublishedAtLTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldPublishedAt, v))
}

// RawEnEQ applies the EQ predicate on the "raw_en" field.
func RawEnEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldRawEn, v))
}

// RawEnNEQ applies the NEQ predicate on the "raw_en" field.
func RawEnNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldRawEn, v))
}

// RawEnIn applies the In predicate on the "raw_en" field.
func RawEnIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldRawEn, vs...))
}

// RawEnNotIn applies the NotIn predicate on the "raw_en" field.
func RawEnNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldRawEn, vs...))
}

// RawEnGT applies the GT predicate on the "raw_en" field.
func RawEnGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldRawEn, v))
}

// RawEnGTE applies the GTE predicate on the "raw_en" field.
func RawEnGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldRawEn, v))
}

// RawEnLT applies the LT predicate on the "raw_en" field.
func RawEnLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldRawEn, v))
}

// RawEnLTE applies the LTE predicate on the "raw_en" field.
func RawEnLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldRawEn, v))
}

// RawEnContains applies the Contains predicate on the "raw_en" field.
func RawEnContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldRawEn, v))
}

// RawEnHasPrefix applies the HasPrefix predicate on the "raw_en" field.
func RawEnHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldRawEn, v))
}

// RawEnHasSuffix applies the HasSuffix predicate on the "raw_en" field.
func RawEnHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldRawEn, v))
}

// RawEnIsNil applies the IsNil predicate on the "raw_en" field.
func RawEnIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldRawEn))
}

// RawEnNotNil applies the NotNil predicate on the "raw_en" field.
func RawEnNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldRawEn))
}

// RawEnEqualFold applies the EqualFold predicate on the "raw_en" field.
func RawEnEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldRawEn, v))
}

// RawEnContainsFold applies the ContainsFold predicate on the "raw_en" field.
func RawEnContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldRawEn, v))
}

// RawCnEQ applies the EQ predicate on the "raw_cn" field.
func RawCnEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldRawCn, v))
}

// RawCnNEQ applies the NEQ predicate on the "raw_cn" field.
func RawCnNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldRawCn, v))
}

// RawCnIn applies the In predicate on the "raw_cn" field.
func RawCnIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldRawCn, vs...))
}

// RawCnNotIn applies the NotIn predicate on the "raw_cn" field.
func RawCnNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldRawCn, vs...))
}

// RawCnGT applies the GT predicate on the "raw_cn" field.
func RawCnGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldRawCn, v))
}

// RawCnGTE applies the GTE predicate on the "raw_cn" field.
func RawCnGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldRawCn, v))
}

// RawCnLT applies the LT predicate on the "raw_cn" field.
func RawCnLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldRawCn, v))
}

// RawCnLTE applies the LTE predicate on the "raw_cn" field.
func RawCnLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldRawCn, v))
}

// RawCnContains applies the Contains predicate on the "raw_cn" field.
func RawCnContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldRawCn, v))
}

// RawCnHasPrefix applies the HasPrefix predicate on the "raw_cn" field.
func RawCnHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldRawCn, v))
}

// RawCnHasSuffix applies the HasSuffix predicate on the "raw_cn" field.
func RawCnHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldRawCn, v))
}

// RawCnIsNil applies the IsNil predicate on the "raw_cn" field.
func RawCnIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldRawCn))
}

// RawCnNotNil applies the NotNil predicate on the "raw_cn" field.
func RawCnNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldRawCn))
}

// RawCnEqualFold applies the EqualFold predicate on the "raw_cn" field.
func RawCnEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldRawCn, v))
}

// RawCnContainsFold applies the ContainsFold predicate on the "raw_cn" field.
func RawCnContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldRawCn, v))
}

// PreviewEnEQ applies the EQ predicate on the "preview_en" field.
func PreviewEnEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPreviewEn, v))
}

// PreviewEnNEQ applies the NEQ predicate on the "preview_en" field.
func PreviewEnNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldPreviewEn, v))
}

// PreviewEnIn applies the In predicate on the "preview_en" field.
func PreviewEnIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldPreviewEn, vs...))
}

// PreviewEnNotIn applies the NotIn predicate on the "preview_en" field.
func PreviewEnNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldPreviewEn, vs...))
}

// PreviewEnGT applies the GT predicate on the "preview_en" field.
func PreviewEnGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldPreviewEn, v))
}

// PreviewEnGTE applies the GTE predicate on the "preview_en" field.
func PreviewEnGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldPreviewEn, v))
}

// PreviewEnLT applies the LT predicate on the "preview_en" field.
func PreviewEnLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldPreviewEn, v))
}

// PreviewEnLTE applies the LTE predicate on the "preview_en" field.
func PreviewEnLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldPreviewEn, v))
}

// PreviewEnContains applies the Contains predicate on the "preview_en" field.
func PreviewEnContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldPreviewEn, v))
}

// PreviewEnHasPrefix applies the HasPrefix predicate on the "preview_en" field.
func PreviewEnHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldPreviewEn, v))
}

// PreviewEnHasSuffix applies the HasSuffix predicate on the "preview_en" field.
func PreviewEnHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldPreviewEn, v))
}

// PreviewEnIsNil applies the IsNil predicate on the "preview_en" field.
func PreviewEnIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldPreviewEn))
}

// PreviewEnNotNil applies the NotNil predicate on the "preview_en" field.
func PreviewEnNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldPreviewEn))
}

// PreviewEnEqualFold applies the EqualFold predicate on the "preview_en" field.
func PreviewEnEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldPreviewEn, v))
}

// PreviewEnContainsFold applies the ContainsFold predicate on the "preview_en" field.
func PreviewEnContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldPreviewEn, v))
}

// PreviewCnEQ applies the EQ predicate on the "preview_cn" field.
func PreviewCnEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPreviewCn, v))
}

// PreviewCnNEQ applies the NEQ predicate on the "preview_cn" field.
func PreviewCnNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldPreviewCn, v))
}

// PreviewCnIn applies the In predicate on the "preview_cn" field.
func PreviewCnIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldPreviewCn, vs...))
}

// PreviewCnNotIn applies the NotIn predicate on the "preview_cn" field.
func PreviewCnNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldPreviewCn, vs...))
}

// PreviewCnGT applies the GT predicate on the "preview_cn" field.
func PreviewCnGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldPreviewCn, v))
}

// PreviewCnGTE applies the GTE predicate on the "preview_cn" field.
func PreviewCnGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldPreviewCn, v))
}

// PreviewCnLT applies the LT predicate on the "preview_cn" field.
func PreviewCnLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldPreviewCn, v))
}

// PreviewCnLTE applies the LTE predicate on the "preview_cn" field.
func PreviewCnLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldPreviewCn, v))
}

// PreviewCnContains applies the Contains predicate on the "preview_cn" field.
func PreviewCnContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldPreviewCn, v))
}

// PreviewCnHasPrefix applies the HasPrefix predicate on the "preview_cn" field.
func PreviewCnHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldPreviewCn, v))
}

// PreviewCnHasSuffix applies the HasSuffix predicate on the "preview_cn" field.
func PreviewCnHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldPreviewCn, v))
}

// PreviewCnIsNil applies the IsNil predicate on the "preview_cn" field.
func PreviewCnIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldPreviewCn))
}

// PreviewCnNotNil applies the NotNil predicate on the "preview_cn" field.
func PreviewCnNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldPreviewCn))
}

// PreviewCnEqualFold applies the EqualFold predicate on the "preview_cn" field.
func PreviewCnEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldPreviewCn, v))
}

// PreviewCnContainsFold applies the ContainsFold predicate on the "preview_cn" field.
func PreviewCnContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldPreviewCn, v))
}

// CrawledAtEQ applies the EQ predicate on the "crawled_at" field.
func CrawledAtEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCrawledAt, v))
}

// CrawledAtNEQ applies the NEQ predicate on the "crawled_at" field.
func CrawledAtNEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCrawledAt, v))
}

// CrawledAtIn applies the In predicate on the "crawled_at" field.
func CrawledAtIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldCrawledAt, vs...))
}

// CrawledAtNotIn applies the NotIn predicate on the "crawled_at" field.
func CrawledAtNotIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldCrawledAt, vs...))
}

// CrawledAtGT applies the GT predicate on the "crawled_at" field.
func CrawledAtGT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldCrawledAt, v))
}

// CrawledAtGTE applies the GTE predicate on the "crawled_at" field.
func CrawledAtGTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldCrawledAt, v))
}

// CrawledAtLT applies the LT predicate on the "crawled_at" field.
func CrawledAtLT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldCrawledAt, v))
}

// CrawledAtLTE applies the LTE predicate on the "crawled_at" field.
func CrawledAtLTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldCrawledAt, v))
}

// SummaryCnEQ applies the EQ predicate on the "summary_cn" field.
func SummaryCnEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldSummaryCn, v))
}

// SummaryCnNEQ applies the NEQ predicate on the "summary_cn" field.
func SummaryCnNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldSummaryCn, v))
}

// SummaryCnIn applies the In predicate on the "summary_cn" field.
func SummaryCnIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldSummaryCn, vs...))
}

// SummaryCnNotIn applies the NotIn predicate on the "summary_cn" field.
func SummaryCnNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldSummaryCn, vs...))
}

// SummaryCnGT applies the GT predicate on the "summary_cn" field.
func SummaryCnGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldSummaryCn, v))
}

// SummaryCnGTE applies the GTE predicate on the "summary_cn" field.
func SummaryCnGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldSummaryCn, v))
}

// SummaryCnLT applies the LT predicate on the "summary_cn" field.
func SummaryCnLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldSummaryCn, v))
}

// SummaryCnLTE applies the LTE predicate on the "summary_cn" field.
func SummaryCnLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldSummaryCn, v))
}

// SummaryCnContains applies the Contains predicate on the "summary_cn" field.
func SummaryCnContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldSummaryCn, v))
}

// SummaryCnHasPrefix applies the HasPrefix predicate on the "summary_cn" field.
func SummaryCnHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldSummaryCn, v))
}

// SummaryCnHasSuffix applies the HasSuffix predicate on the "summary_cn" field.
func SummaryCnHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldSummaryCn, v))
}

// SummaryCnIsNil applies the IsNil predicate on the "summary_cn" field.
func SummaryCnIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldSummaryCn))
}

// SummaryCnNotNil applies the NotNil predicate on the "summary_cn" field.
func SummaryCnNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldSummaryCn))
}

// SummaryCnEqualFold applies the EqualFold predicate on the "summary_cn" field.
func SummaryCnEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldSummaryCn, v))
}

// SummaryCnContainsFold applies the ContainsFold predicate on the "summary_cn" field.
func SummaryCnContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldSummaryCn, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Article) predicate.Article {
	return predicate.Article(sql.NotPredicates(p))
}
